{"version":3,"sources":["assets/image-not-avialable.png","Components/Molecules/PokemonCard.js","Pages/MainPage.js","assets/pokemon.png","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","url","useState","data","setData","useEffect","cancelTokenSource","axios","CancelToken","source","a","get","cancelToken","token","result","fetchData","cancel","name","sprites","moves","weight","abilities","capitalName","charAt","toUpperCase","slice","className","src","front_default","defaultimage","width","alt","length","map","ability","MainPage","history","useHistory","offset","useParams","parseInt","push","error","toggleError","hasNext","toggleHasNext","hasPrevious","toggleHasPrevious","StatusInfo","previous","next","console","type","disabled","onClick","newOffset","path","results","App","logo","id","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9bc934b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image-not-avialable.e6f439b9.png\";","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport defaultimage from '../../assets/image-not-avialable.png'\nimport './PokemonCard.css'\n\nexport function PokemonCard({url}){\n\n    const [data, setData] = useState(null);\n\n    useEffect(()=>{\n        const cancelTokenSource = axios.CancelToken.source();\n        async function fetchData(){\n            try{\n                const result = await axios.get(url, {cancelToken: cancelTokenSource.token});\n                setData(result.data);\n            } catch (e){\n            }\n\n        }\n\n        fetchData()\n\n        return () => {\n            cancelTokenSource.cancel();\n        };\n\n    },[url])\n\n    if(data){\n        const {name, sprites, moves, weight, abilities } = data;\n        const capitalName = name.charAt(0).toUpperCase() + name.slice(1);\n        return (\n            <article className='pokemon-card'>\n                <h3>{capitalName}</h3>\n                <img src={sprites.front_default || defaultimage} width='96px' alt={data.name}/>\n                <p><span className='prop-name'>Moves: </span>{moves.length}</p>\n                <p><span className='prop-name'>Weight: </span>{weight}</p>\n                <div className='prop-name'>Abilities</div>\n                <ul className='abilities-list'>\n                    {abilities.map((ability) =>{\n                        return <li className='ability' key = {ability.ability.name}>{ability.ability.name}</li>\n                    })}\n                </ul>\n            </article>\n\n        )\n    } else{\n        return (\n            <article className='pokemon-card'>\n                <h3>Missing data</h3>\n                <div>Sorry, something went wrong!</div>\n                <div />\n            </article>\n        )\n    }\n\n}\n\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Route, Switch, useParams, useHistory} from \"react-router-dom\";\nimport './MainPage.css';\nimport {PokemonCard} from \"../Components/Molecules/PokemonCard\";\n\nfunction MainPage() {\n\n    const history = useHistory();\n\n    //get offset from url, force it to be an integer and catch\n    //some possible erroneous input\n    let {offset} = useParams();\n    offset = parseInt(offset);\n    if (offset <= 0) {\n        offset = 0;\n        history.push('/')\n    }\n    if (!offset) {\n        offset = 0;\n    }\n\n    const [data, setData] = useState(null);\n    const [error, toggleError] = useState(false);\n    const [hasNext, toggleHasNext] = useState(true);\n    const [hasPrevious, toggleHasPrevious] = useState(false);\n\n\n    useEffect(() => {\n\n            const cancelTokenSource = axios.CancelToken.source();\n            async function fetchData() {\n                try {\n                    const result = await axios.get(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=20`, {cancelToken: cancelTokenSource.token});\n                    setData(result.data);\n                    toggleError(false)\n                    if (result.data.previous === null) {\n                        toggleHasPrevious(false);\n                    } else {\n                        toggleHasPrevious(true);\n                    }\n                    if (result.data.next === null) {\n                        toggleHasNext(false);\n                    } else {\n                        toggleHasNext(true);\n                    }\n                } catch (e) {\n                    toggleError(true);\n                    console.error(e)\n                }\n\n            }\n\n            setData(null);\n            fetchData();\n\n            return ()=>{\n                cancelTokenSource.cancel();\n            }\n        }\n        ,\n        [offset]\n    )\n\n    function StatusInfo() {\n        if (error) {\n            return <div>Something went wrong</div>\n        } else if (data === null) {\n            return <div>Loading...</div>\n        } else {\n            return null;\n        }\n    }\n\n\n    return (\n        <>\n            <div className=\"buttoncontainer\">\n                <button type='button' disabled={!hasPrevious} onClick={\n                    () => {\n                        let newOffset = offset - 20\n                        if (newOffset < 0) {\n                            newOffset = 0;\n                        }\n                        if (newOffset === 0) {\n                            history.push('/');\n                        } else {\n                            history.push(`/${newOffset}`)\n                        }\n\n                    }\n                }>\n                    Previous\n                </button>\n                <button type='button' disabled={!hasNext} onClick={\n                    () => {\n                        let newOffset = offset + 20;\n                        history.push(`/${newOffset}`)\n                    }\n                }>\n                    Next\n                </button>\n            </div>\n            <Switch>\n                <Route path='/'>\n                    <div className='pokemon-container'>\n                        {data && data.results.map((result) => {\n                            return <PokemonCard url={result.url} key={result.url}/>\n                        })}\n                        <StatusInfo/>\n                    </div>\n                </Route>\n            </Switch>\n        </>\n    );\n}\n\nexport default MainPage;\n","export default __webpack_public_path__ + \"static/media/pokemon.03d2cb1c.png\";","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport MainPage from \"./Pages/MainPage.js\";\nimport logo from \"./assets/pokemon.png\";\nimport './App.css';\n\nfunction App() {\n    return (\n        <Router>\n            <div className='main-app'>\n                <img alt='' src={logo} id='logo'/>\n                <Switch>\n                    <Route exact path='/'>\n                        <MainPage/>\n                    </Route>\n                    <Route path='/:offset'>\n                        <MainPage/>\n                    </Route>\n                </Switch>\n            </div>\n\n        </Router>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}